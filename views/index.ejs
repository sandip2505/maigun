<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bulk Email Sender</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ckeditor/4.16.2/ckeditor.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            background-color: #f4f4f4;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
            font-size: 24px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: bold;
        }

        input[type="text"],
        input[type="email"],
        textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            margin-bottom: 5px;
        }

        .email-list-container {
            margin-top: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            max-height: 200px;
            overflow-y: auto;
            background: #fff;
        }

        .email-list {
            list-style: none;
            padding: 0;
        }

        .email-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 15px;
            border-bottom: 1px solid #eee;
            transition: background-color 0.2s;
        }

        .email-item:last-child {
            border-bottom: none;
        }

        .email-item:hover {
            background-color: #f8f9fa;
        }

        .remove-email {
            background: #dc3545;
            color: white;
            border: none;
            border-radius: 3px;
            padding: 4px 8px;
            cursor: pointer;
            font-size: 12px;
            transition: background 0.3s;
        }

        .remove-email:hover {
            background: #c82333;
        }

        button[type="submit"] {
            background: #007bff;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
            transition: background 0.3s;
        }

        button[type="submit"]:hover {
            background: #0056b3;
        }

        button[type="submit"]:disabled {
            background: #ccc;
            cursor: not-allowed;
        }

        .error {
            color: #dc3545;
            font-size: 14px;
            margin-top: 5px;
        }

        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 4px;
            display: none;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .loading {
            display: none;
            text-align: center;
            margin: 10px 0;
        }

        .loading-spinner {
            border: 3px solid #f3f3f3;
            border-radius: 50%;
            border-top: 3px solid #007bff;
            width: 24px;
            height: 24px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* CKEditor Customization */
        .cke_chrome {
            border: 1px solid #ddd !important;
            border-radius: 5px !important;
            margin-top: 5px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                padding: 20px;
                margin: 10px;
            }

            h1 {
                font-size: 20px;
            }

            input[type="text"],
            input[type="email"],
            textarea {
                font-size: 14px;
            }

            button[type="submit"] {
                padding: 10px 15px;
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Bulk Email Sender</h1>
        
        <!-- Alert Messages -->
        <div id="successAlert" class="alert alert-success"></div>
        <div id="errorAlert" class="alert alert-error"></div>
        
        <!-- Loading Indicator -->
        <div id="loading" class="loading">
            <div class="loading-spinner"></div>
            <p>Sending emails...</p>
        </div>

        <form id="emailForm">
            <div class="form-group">
                <label for="emails">Email Addresses:</label>
                <input type="email" id="emailInput" placeholder="Enter email and press Enter">
                <div id="emailError" class="error"></div>
                <div class="email-list-container">
                    <ul id="emailList" class="email-list"></ul>
                </div>
            </div>

            <div class="form-group">
                <label for="subject">Subject:</label>
                <input type="text" id="subject" name="subject" required>
                <div id="subjectError" class="error"></div>
            </div>

            <div class="form-group">
                <label for="message">Message:</label>
                <textarea id="message" name="message"></textarea>
                <div id="messageError" class="error"></div>
            </div>

            <button type="submit" id="submitButton">Send Emails</button>
        </form>
    </div>

    <script>
        // Initialize CKEditor
        CKEDITOR.replace('message');

        let emails = [];
        const emailInput = document.getElementById('emailInput');
        const emailList = document.getElementById('emailList');
        const emailError = document.getElementById('emailError');
        const form = document.getElementById('emailForm');
        const loading = document.getElementById('loading');
        const successAlert = document.getElementById('successAlert');
        const errorAlert = document.getElementById('errorAlert');
        const submitButton = document.getElementById('submitButton');

        // Show alert function
        function showAlert(message, type) {
            const alert = type === 'success' ? successAlert : errorAlert;
            alert.textContent = message;
            alert.style.display = 'block';
            setTimeout(() => {
                alert.style.display = 'none';
            }, 5000);
        }

        // Toggle loading state
        function toggleLoading(show) {
            loading.style.display = show ? 'block' : 'none';
            submitButton.disabled = show;
            emailInput.disabled = show;
            document.getElementById('subject').disabled = show;
            if (show) {
                submitButton.textContent = 'Sending...';
            } else {
                submitButton.textContent = 'Send Emails';
            }
        }

        // Email input handler
        emailInput.addEventListener('keydown', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                const email = this.value.trim();
                if (validateEmail(email)) {
                    if (!emails.includes(email)) {
                        addEmail(email);
                        this.value = '';
                        emailError.textContent = '';
                    } else {
                        emailError.textContent = 'Email already added';
                    }
                } else {
                    emailError.textContent = 'Please enter a valid email address';
                }
            }
        });

        // Add email to the list
        function addEmail(email) {
            emails.push(email);
            renderEmails();
        }

        // Remove email from the list
        function removeEmail(email) {
            emails = emails.filter(e => e !== email);
            renderEmails();
        }

        // Render email list
        function renderEmails() {
            emailList.innerHTML = '';
            emails.forEach(email => {
                const li = document.createElement('li');
                li.className = 'email-item';
                li.innerHTML = `
                    <span>${email}</span>
                    <button type="button" class="remove-email" onclick="removeEmail('${email}')">Remove</button>
                `;
                emailList.appendChild(li);
            });
        }

        // Email validation
        function validateEmail(email) {
            const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return re.test(email);
        }

        // Form submission handler
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Reset alerts
            successAlert.style.display = 'none';
            errorAlert.style.display = 'none';

            let isValid = true;
            
            // Validate emails
            if (emails.length === 0) {
                emailError.textContent = 'Please add at least one email address';
                isValid = false;
            }

            // Validate subject
            const subject = document.getElementById('subject').value;
            if (!subject.trim()) {
                document.getElementById('subjectError').textContent = 'Subject is required';
                isValid = false;
            }

            // Get CKEditor content
            const message = CKEDITOR.instances.message.getData();
            if (!message.trim()) {
                document.getElementById('messageError').textContent = 'Message is required';
                isValid = false;
            }

            if (isValid) {
                try {
                    toggleLoading(true);

                    const response = await fetch('/send-mails', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            email: emails,
                            subject: subject,
                            message: message
                        })
                    });

                    const data = await response.json();

                    if (data.success) {
                        showAlert('Emails sent successfully!', 'success');
                        // Reset form
                        form.reset();
                        emails = [];
                        renderEmails();
                        CKEDITOR.instances.message.setData('');
                    } else {
                        throw new Error(data.error || 'Failed to send emails');
                    }
                } catch (error) {
                    showAlert(error.message || 'Error sending emails. Please try again.', 'error');
                } finally {
                    toggleLoading(false);
                }
            }
        });
    </script>
</body>
</html>